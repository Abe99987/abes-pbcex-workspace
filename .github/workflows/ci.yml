# BACKUP: Previous workflow had complex caching/setup logic with env context issues
# Replaced with simplified workflow to fix actionlint validation errors

name: CI Pipeline

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  NODE_VERSION: '20'

jobs:
  actionlint:
    name: Lint GitHub Workflows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  backend:
    name: Backend (lint + build + test)
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: Enable npm and show versions
        run: |
          node -v
          npm -v
      - name: Install backend deps
        run: |
          cd backend
          npm ci --prefer-offline --no-audit
      - name: Lint backend
        run: |
          cd backend
          npm run lint
      - name: Check TypeScript compilation
        run: |
          cd backend
          npx tsc --noEmit
      - name: Build backend
        run: |
          cd backend
          npm run build
      - name: Test backend
        run: |
          cd backend
          npm run test:unit
        env:
          NODE_ENV: test
          JWT_SECRET: test_jwt_secret_32_characters_long
          REDIS_URL: redis://localhost:6379
          DATABASE_URL: postgres://test:test@localhost:5432/test
          COINGECKO_BASE_URL: http://localhost:8999/mock
          FEDEX_BASE_URL: http://localhost:8999/mock
          RESEND_API_KEY: test_key
          TWILIO_ACCOUNT_SID: test_sid
          TWILIO_AUTH_TOKEN: test_token

  frontend:
    name: Frontend (lint + build + test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Enable npm and show versions
        run: |
          node -v
          npm -v
      - name: Install frontend deps
        run: npm ci --prefer-offline --no-audit
      - name: Lint frontend
        run: npm run lint
      - name: Check TypeScript compilation
        run: npx tsc --noEmit
      - name: Build frontend
        run: npm run build
        env:
          VITE_API_BASE_URL: https://api.pbcex.com
          NODE_ENV: production
      - name: Test frontend (if present)
        run: |
          if grep -q '"test"' package.json; then
            npm test -- --watchAll=false --coverage=false
          else
            echo "No frontend tests found, skipping test step"
          fi
        env:
          CI: true

  summary:
    name: CI Summary
    needs: [actionlint, backend, frontend]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Print job results
        run: |
          echo "actionlint: ${{ needs.actionlint.result }}"
          echo "backend:    ${{ needs.backend.result }}"
          echo "frontend:   ${{ needs.frontend.result }}"

          # Check if any required job failed
          if [[ "${{ needs.actionlint.result }}" != "success" || \
                "${{ needs.backend.result }}" != "success" || \
                "${{ needs.frontend.result }}" != "success" ]]; then
            echo "❌ CI Pipeline failed - some jobs did not complete successfully"
            exit 1
          else
            echo "✅ CI Pipeline completed successfully!"
          fi
