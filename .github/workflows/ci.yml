name: CI Pipeline

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  NODE_VERSION: '20'

jobs:
  actionlint:
    name: Lint GitHub Workflows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  backend:
    name: Backend (lint + build + test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: Show versions
        run: |
          node -v
          npm -v
      - name: Install backend deps
        run: |
          cd backend
          npm ci --prefer-offline --no-audit
      - name: Lint backend
        run: |
          cd backend
          npm run lint:check
      - name: Type-check backend
        run: |
          cd backend
          npm run type-check
      - name: Build backend
        run: |
          cd backend
          npm run build
      - name: Build validation
        run: |
          cd backend
          npm run build:check
      - name: Test backend
        run: |
          cd backend
          npm run test:unit

  frontend:
    name: Frontend (lint + build + test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Show versions
        run: |
          node -v
          npm -v
      - name: Install frontend deps
        run: npm ci --prefer-offline --no-audit
      - name: Lint frontend
        run: npm run lint
      - name: Build frontend
        run: npm run build
      - name: Test frontend (if present)
        run: |
          if grep -q '"test"' package.json; then
            npm test -- --watchAll=false --coverage=false
          else
            echo "No frontend tests found, skipping test step"
          fi

  summary:
    name: CI Summary
    needs: [actionlint, backend, frontend]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Print job results
        run: |
          echo "actionlint: ${{ needs.actionlint.result }}"
          echo "backend:    ${{ needs.backend.result }}"
          echo "frontend:   ${{ needs.frontend.result }}"

          # Check if any required job failed
          if [[ "${{ needs.actionlint.result }}" != "success" || \
                "${{ needs.backend.result }}" != "success" || \
                "${{ needs.frontend.result }}" != "success" ]]; then
            echo "❌ CI Pipeline failed - some jobs did not complete successfully"
            exit 1
          else
            echo "✅ CI Pipeline completed successfully!"
          fi
