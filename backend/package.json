{
  "name": "@pbcex/backend",
  "version": "1.0.0",
  "description": "PBCEx Backend API Server",
  "main": "dist/server.js",
  "scripts": {
    "dev": "ts-node-dev --respawn --transpile-only -r tsconfig-paths/register src/server.ts",
    "build": "tsc",
    "start": "node dist/server.js",
    "test": "jest --runInBand",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest tests/unit --runInBand",
    "test:integration": "jest tests/integration --runInBand",
    "test:api": "jest tests/integration/api --runInBand",
    "test:contract": "if [ \"$RUN_CONTRACT_TESTS\" = \"true\" ]; then npm run validate:openapi && dredd src/openapi/openapi.yaml http://localhost:4001 --config=dredd.yml || echo 'Contract tests completed with warnings'; else echo 'Contract tests skipped (set RUN_CONTRACT_TESTS=true to enable)'; fi",
    "validate:openapi": "ts-node tests/contract/validate-openapi.ts src/openapi/openapi.yaml",
    "test:phase3": "ENABLE_VAULT_REDEMPTION=true FULFILLMENT_STRATEGY=JM jest --testPathPattern=\"(redemption|fulfillment|support)\"",
    "e2e": "playwright test",
    "e2e:headed": "playwright test --headed",
    "loadtest": "k6 run loadtests/k6/trade_order.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "lint:fix": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "audit": "node scripts/security-audit.js",
    "migrate": "ts-node -r tsconfig-paths/register scripts/run-migrations.ts",
    "migrate:test": "node ./scripts/migrate-test.js",
    "seed": "ts-node -r tsconfig-paths/register scripts/seed-supabase.ts",
    "seed:memory": "ts-node -r tsconfig-paths/register scripts/seed-dev.ts",
    "reset:db": "npm run migrate && npm run seed",
    "dev:backend": "npm run dev",
    "dev:fedex-smoke": "ts-node -r tsconfig-paths/register scripts/dev-fedex-smoke.ts",
    "lint:check": "eslint \"{src,tests}/**/*.ts\" --max-warnings 0",
    "type-check": "tsc --noEmit",
    "test:ci": "jest --ci --coverage --watchAll=false --runInBand",
    "build:check": "npm run lint:check && npm run type-check && npm run build"
  },
  "keywords": [
    "pbcex",
    "commodities",
    "trading",
    "api"
  ],
  "author": "PBCEx Team",
  "license": "PROPRIETARY",
  "dependencies": {
    "axios": "^1.5.0",
    "bcrypt": "^5.1.0",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^6.8.1",
    "fast-csv": "^5.0.5",
    "helmet": "^7.0.0",
    "ioredis": "^5.7.0",
    "jsonwebtoken": "^9.0.1",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.9.4",
    "pg": "^8.16.3",
    "resend": "^6.0.2",
    "stripe": "^12.18.0",
    "swagger-ui-express": "^5.0.0",
    "twilio": "^4.14.0",
    "uuid": "^9.0.0",
    "winston": "^3.10.0",
    "ws": "^8.13.0",
    "yamljs": "^0.3.0",
    "zod": "^3.22.2"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@types/bcrypt": "^5.0.0",
    "@types/compression": "^1.8.1",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.3",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/multer": "^1.4.7",
    "@types/node": "^20.4.5",
    "@types/nodemailer": "^6.4.8",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^2.0.12",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^9.0.2",
    "@types/ws": "^8.5.5",
    "@types/yamljs": "^0.2.31",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "dredd": "^14.1.0",
    "eslint": "^8.55.0",
    "jest": "^29.6.2",
    "jest-mock-extended": "^3.0.5",
    "openapi-enforcer": "1.23.0",
    "openapi-types": "^12.1.3",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.6"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "globalSetup": "<rootDir>/tests/global-setup.ts",
    "globalTeardown": "<rootDir>/tests/global-teardown.ts",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.ts"
    ],
    "testMatch": [
      "<rootDir>/src/**/*.test.ts",
      "<rootDir>/tests/**/*.test.ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.{ts,js}",
      "!src/**/*.d.ts",
      "!src/__tests__/**/*",
      "!src/server.ts",
      "!tests/**/*"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "moduleNameMapping": {
      "^@/(.*)$": "<rootDir>/src/$1"
    },
    "testTimeout": 30000,
    "maxWorkers": 1,
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/e2e/"
    ]
  }
}
