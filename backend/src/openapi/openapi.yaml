openapi: 3.0.3
info:
  title: PBCEx API
  version: 1.0.0
  description: |
    People's Bank & Commodities Exchange (PBCEx) API for precious metals trading, 
    custody, and fulfillment operations.

    ## Authentication
    All protected endpoints require a Bearer token in the Authorization header:
    ```
    Authorization: Bearer <your-access-token>
    ```

    ## Rate Limits
    - General API: 1000 requests per 15 minutes
    - Authentication: 5 attempts per 15 minutes  
    - KYC submissions: 10 per hour
    - Trading: 30 per minute

  contact:
    name: PBCEx API Support
    email: api-support@pbcex.com
  license:
    name: Proprietary
  x-build-info:
    branch: feature/money-movement-backend
    shortHash: ff3d03a
    generatedAt: '2025-08-31T20:00:00Z'

servers:
  - url: http://localhost:4000
    description: Development server
  - url: https://api.pbcex.com
    description: Production server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required:
        - code
        - message
        - timestamp
      properties:
        code:
          type: string
          enum:
            [
              VALIDATION_ERROR,
              AUTHENTICATION_ERROR,
              AUTHORIZATION_ERROR,
              NOT_FOUND,
              CONFLICT,
              RATE_LIMITED,
              INTERNAL_ERROR,
              SERVICE_UNAVAILABLE,
            ]
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string
        details:
          type: object

    # Money Movement Schemas
    InternalTransfer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fromAccount:
          type: string
        toAccount:
          type: string
        asset:
          type: string
        amount:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time

    BankTransfer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        beneficiaryId:
          type: string
          format: uuid
        amount:
          type: string
        currency:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time

    PaymentRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: string
        currency:
          type: string
        description:
          type: string
        status:
          type: string
        token:
          type: string
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    RecurringRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: string
        currency:
          type: string
        frequency:
          type: string
        targetAccount:
          type: string
        enabled:
          type: boolean
        nextRunAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    CardFundingPreference:
      type: object
      properties:
        cardRef:
          type: string
        eligibleAssets:
          type: array
          items:
            type: string
        selectedAsset:
          type: string
        createdAt:
          type: string
          format: date-time

    DCAPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
        asset:
          type: string
        amount:
          type: string
        frequency:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        enabled:
          type: boolean
        nextRunAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    PriceQuote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        symbol:
          type: string
        side:
          type: string
        amount:
          type: string
        price:
          type: string
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        symbol:
          type: string
        amount:
          type: number
        status:
          type: string
        createdAt:
          type: string
          format: date-time

    Beneficiary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        displayName:
          type: string
        details:
          type: object
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time

    Transfer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        amount:
          type: string
        asset:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time

  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Transfers
    description: Internal and external money transfers
  - name: Crypto
    description: Cryptocurrency operations and withdrawals
  - name: Beneficiaries
    description: Transfer beneficiary management
  - name: QR
    description: QR code payment tokens
  - name: Payment Requests
    description: Payment request creation and management
  - name: Recurring
    description: Recurring transfer rules
  - name: Card Funding
    description: Card funding preferences and settings
  - name: DCA
    description: Dollar Cost Averaging plans
  - name: Quotes
    description: Price quotes and estimates
  - name: Orders
    description: Trading orders and execution
  - name: Health
    description: Service health endpoints
  - name: Authentication
    description: User authentication and authorization

paths:
  # Health endpoint
  /health:
    get:
      tags: [Health]
      summary: Health check
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  timestamp:
                    type: string
                  version:
                    type: string
