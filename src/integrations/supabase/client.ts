// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = 'https://arjrtbhuzftydzblttoa.supabase.co';
const SUPABASE_PUBLISHABLE_KEY =
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFyanJ0Ymh1emZ0eWR6Ymx0dG9hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY1NzIxNDMsImV4cCI6MjA3MjE0ODE0M30.S22Ttb8jgHjxfrhgDZHWEIbt0fpzzomC-r67jqeIRSA';

// Check if we're in preview mode or if localStorage is available
const isPreviewMode = (() => {
  if (typeof window === 'undefined') return false;
  return (
    window.location?.hostname === 'localhost' ||
    window.location?.hostname?.includes('preview') ||
    window.location?.hostname?.includes('lovable') ||
    process.env.NODE_ENV === 'development' ||
    process.env.PREVIEW_MODE === 'true'
  );
})();

const hasLocalStorage = (() => {
  try {
    return typeof localStorage !== 'undefined' && localStorage !== null;
  } catch {
    return false;
  }
})();

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL,
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      storage: hasLocalStorage ? localStorage : undefined,
      persistSession: !isPreviewMode && hasLocalStorage,
      autoRefreshToken: !isPreviewMode && hasLocalStorage,
    },
  }
);
