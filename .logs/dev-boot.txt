
> vite_react_shadcn_ts@0.0.0 predev:all
> npm run env:doctor


> vite_react_shadcn_ts@0.0.0 env:doctor
> ts-node --esm scripts/envDoctor.ts

(node:95447) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.
(Use `node --trace-deprecation ...` to show where the warning was created)

🩺 PBCEx Environment Doctor

Validating configuration for reliable startup...

🔧 Backend Environment Variables
──────────────────────────────────────────────────

📂 Core
   Essential application settings
   ✅ NODE_ENV = development
   ✅ PORT = 4000
   ✅ DATABASE_URL = postgres://postgres:postgres@localhost:5432/pbcex
   ✅ REDIS_URL = redis://localhost:6379

📂 Auth/Security
   Authentication and security configuration
   ✅ JWT_SECRET = repl****************************ring
   ✅ SESSION_SECRET = repl****************************ring
   ✅ ENCRYPTION_KEY = repl*******************_key

📂 Market
   Market data and pricing
   ⚠️  TRADINGVIEW_API_KEY (optional, not set)

📂 KYC/Custody
   Identity verification and asset custody
   ⚠️  PLAID_CLIENT_ID (optional, not set)
   ⚠️  PLAID_SECRET (optional, not set)
   ✅ PLAID_ENV = sandbox
   ⚠️  PAXOS_API_KEY (optional, not set)
   ⚠️  PAXOS_API_SECRET (optional, not set)
   ⚠️  PRIMETRUST_API_KEY (optional, not set)
   ⚠️  PRIMETRUST_API_SECRET (optional, not set)
   ⚠️  ANCHORAGE_API_KEY (optional, not set)

📂 Fulfillment/Logistics
   Physical asset fulfillment and shipping
   ⚠️  JM_BULLION_API_KEY (optional, not set)
   ⚠️  JM_BULLION_API_SECRET (optional, not set)
   ⚠️  DILLON_GAGE_API_KEY (optional, not set)
   ⚠️  DILLON_GAGE_API_SECRET (optional, not set)
   ⚠️  FEDEX_CLIENT_ID (optional, not set)
   ⚠️  FEDEX_CLIENT_SECRET (optional, not set)

📂 Payments
   Payment processing
   ⚠️  STRIPE_SECRET_KEY (optional, not set)

📂 Messaging/Support/Monitoring
   Communication and monitoring services
   ⚠️  SENDGRID_API_KEY (optional, not set)
   ⚠️  TWILIO_ACCOUNT_SID (optional, not set)
   ⚠️  TWILIO_AUTH_TOKEN (optional, not set)
   ⚠️  INTERCOM_ACCESS_TOKEN (optional, not set)
   ⚠️  DATADOG_API_KEY (optional, not set)
   ⚠️  VANTA_API_KEY (optional, not set)

📂 Feature Flags
   Phase-3 and experimental features
   ✅ PHASE = 1
   ✅ ENABLE_ONCHAIN = false
   ✅ ENABLE_VAULT_REDEMPTION = false
   ✅ FULFILLMENT_STRATEGY = JM
   ⚠️  EXPERIMENTS_JSON (optional, not set)

🌐 Frontend Environment Variables
──────────────────────────────────────────────────

📂 Frontend Core
   Essential frontend configuration
   ✅ NEXT_PUBLIC_APP_NAME = PBCEx
   ✅ NEXT_PUBLIC_API_BASE_URL = http://localhost:4000

📂 Frontend Features
   Frontend feature toggles
   ✅ NEXT_PUBLIC_ENABLE_2FA = true
   ✅ NEXT_PUBLIC_ENABLE_PHYSICAL_TRADING = true
   ✅ NEXT_PUBLIC_ENABLE_SYNTHETIC_TRADING = true
   ✅ NEXT_PUBLIC_ENABLE_SHOP = true

📂 Frontend Integrations
   Third-party frontend integrations
   ⚠️  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY (optional, not set)
   ⚠️  NEXT_PUBLIC_GOOGLE_MAPS_API_KEY (optional, not set)
   ⚠️  NEXT_PUBLIC_GOOGLE_ANALYTICS_ID (optional, not set)
   ⚠️  NEXT_PUBLIC_MIXPANEL_TOKEN (optional, not set)
   ⚠️  NEXT_PUBLIC_INTERCOM_APP_ID (optional, not set)

📊 Environment Doctor Summary
==================================================
✅ DIAGNOSIS: HEALTHY
   All critical environment variables are properly configured.

📈 Configuration Statistics:
   ✅ Configured: 18/45 (40%)
   ⚠️  Missing Optional: 27

🚨 Critical Issues:
   • ENCRYPTION_KEY: ENCRYPTION_KEY must be at least 32 characters

⚠️  27 optional integrations not configured (non-critical)

💡 Recommendations:
   • Configure optional integrations as needed for full functionality

📁 Configuration Files:
   • Root: .env
   • Backend: backend/.env
   • Frontend: frontend/.env.local


> vite_react_shadcn_ts@0.0.0 dev:all
> ./scripts/dev.sh


[0;34m🚀 PBCEx Development Environment[0m
[0;34m=================================[0m

[0;34mℹ️  Step 1/5: Setting up environment configuration...[0m

> vite_react_shadcn_ts@0.0.0 setup:env
> ts-node --esm scripts/bootstrap-env.ts

(node:95488) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.
(Use `node --trace-deprecation ...` to show where the warning was created)

🚀 PBCEx Environment Bootstrap

Setting up development environment configuration...

📄 Copying Template Files
──────────────────────────────────────────────────
   ℹ️  Backend Environment already exists → backend/.env
   ℹ️  Frontend Environment already exists → frontend/.env.local

🔧 Backend Environment Configuration
──────────────────────────────────────────────────
   ℹ️  JWT_SECRET already configured
   ℹ️  SESSION_SECRET already configured
   ℹ️  ENCRYPTION_KEY already configured
   ℹ️  NODE_ENV already set = development
   ✅ Set PORT = 4001
   ℹ️  DATABASE_URL already set = postgres://postgres:postgres@localhost:5432/pbc...
   ℹ️  REDIS_URL already set = redis://localhost:6379
   ℹ️  PLAID_ENV already set = sandbox

   📝 Backend environment updated

🌐 Frontend Environment Configuration
──────────────────────────────────────────────────
   ✅ Set NEXT_PUBLIC_APP_NAME = PBCEx
   ℹ️  NEXT_PUBLIC_API_BASE_URL already set = http://localhost:4001
   ℹ️  NODE_ENV already set = development

   📝 Frontend environment updated

📊 Bootstrap Summary
==================================================
✅ Bootstrap completed successfully
📝 Actions performed (2):
   1. Set PORT to 4001
   2. Set frontend NEXT_PUBLIC_APP_NAME

📁 Configuration Files
──────────────────────────────
   Backend: backend/.env
   Frontend: frontend/.env.local

🚀 Next Steps
────────────────────
1. Validate configuration: npm run env:doctor
2. Validate strictly: npm run env:doctor:strict
3. Start development: npm run dev:all

[0;32m✅ Environment configuration setup complete[0m
[0;34mℹ️  Step 2/5: Running preflight checks...[0m

> vite_react_shadcn_ts@0.0.0 preflight
> ts-node --esm scripts/preflight.ts

(node:95510) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.
(Use `node --trace-deprecation ...` to show where the warning was created)

✈️  PBCEx Preflight Checker

Running pre-startup validation checks...

🔧 Environment Configuration
───────────────────────────────────
   ✅ Environment configuration valid

🐘 PostgreSQL Connection
──────────────────────────────
   ℹ️  Testing connection to localhost:5432/pbcex
   ✅ PostgreSQL connection successful

🔴 Redis Connection
─────────────────────────
   ℹ️  Testing connection to localhost:6379/0
   ✅ Redis connection successful

📊 Preflight Summary
===================================
✅ ALL SYSTEMS GO
   3 checks passed

📋 Check Results
────────────────────
✅ Environment Configuration
   All required variables configured
✅ PostgreSQL Connection
   Connected to localhost:5432/pbcex
✅ Redis Connection
   Connected to localhost:6379/0

🚀 Next Steps
───────────────
• All preflight checks passed
• Ready to start development servers
  npm run dev:all

[0;32m✅ All preflight checks passed[0m
[0;34mℹ️  Step 3/5: Checking Docker availability...[0m
[0;32m✅ Docker is available and running[0m
[0;34mℹ️  Step 4/5: Starting infrastructure services...[0m
[0;34mℹ️  Starting Docker Compose services in detached mode...[0m
 Container pbcex-maildev  Running
 Container pbcex-redis  Running
 Container pbcex-postgres  Running
[0;32m✅ Infrastructure services started[0m
[0;34mℹ️  Waiting for services to initialize...[0m
[0;34mℹ️  Step 5/5: Starting development servers...[0m
[0;34mℹ️  Starting backend and frontend development servers...[0m
[0;34mℹ️  Press Ctrl+C to stop all services[0m
[frontend] 
[frontend] up to date, audited 513 packages in 479ms
[frontend] 
[frontend] 159 packages are looking for funding
[frontend]   run `npm fund` for details
[frontend] 
[frontend] found 0 vulnerabilities
[frontend] 
[frontend] > @pbcex/frontend@1.0.0 dev
[frontend] > next dev
[frontend] 
[backend] 
[backend] up to date, audited 923 packages in 673ms
[backend] 
[backend] 114 packages are looking for funding
[backend]   run `npm fund` for details
[backend] 
[backend] 18 vulnerabilities (3 low, 3 moderate, 2 high, 10 critical)
[backend] 
[backend] To address all issues (including breaking changes), run:
[backend]   npm audit fix --force
[backend] 
[backend] Run `npm audit` for details.
[backend] 
[backend] > @pbcex/backend@1.0.0 dev
[backend] > ts-node-dev --respawn --transpile-only -r tsconfig-paths/register src/server.ts
[backend] 
[frontend]   ▲ Next.js 14.2.32
[frontend]   - Local:        http://localhost:3000
[frontend]   - Environments: .env.local
[frontend]   - Experiments (use with caution):
[frontend]     · typedRoutes
[frontend] 
[frontend]  ✓ Starting...
[backend] [INFO] 10:35:18 ts-node-dev ver. 2.0.0 (using ts-node ver. 10.9.2, typescript ver. 5.9.2)
[backend] 🔧 Integration Status:
[backend]   ✅ Configured: none
[backend]   🔧 Missing integrations: SUPPRESSED (vendor placeholders enabled)
[backend]   📝 Note: Using mock implementations for development
[backend] 🚀 Phase-3 Features:
[backend]   📊 Phase: 1
[backend]   ⛓️  Onchain: DISABLED
[backend]   🏛️  Vault Redemption: DISABLED
[backend]   📦 Fulfillment: JM
[backend]   🛠️  Development Mode: Vendor placeholders enabled
[backend] 10:35:18 [32minfo[39m: [32mDatabase pool initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mAPI documentation available at /api/docs[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing PBCEx services...[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing NotificationService[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mLocal SMTP email service initialized (MailDev)[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [33mwarn[39m: [33mTwilio not configured, SMS will be mocked[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [33mwarn[39m: [33mIntercom not configured, support tickets will be mocked[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mNotificationService initialized successfully[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m✅ NotificationService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing EmailService with Resend[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [33mwarn[39m: [33mResend not configured, email will be mocked[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mEmailService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m✅ EmailService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing VerifyService with Twilio Verify[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [33mwarn[39m: [33mTwilio Verify not fully configured, verification will be mocked[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mVerifyService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m✅ VerifyService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing FedexService[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [33mwarn[39m: [33mFedEx not fully configured, service will be mocked[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mFedexService initialized successfully[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m✅ FedexService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing PricesService with CoinGecko[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mCoinGecko API request[39m {"service":"pbcex-api","version":"1.0.0","url":"/ping","correlationId":"4178pfj7x"}
[frontend]  ✓ Ready in 1070ms
[backend] 10:35:19 [32minfo[39m: [32mCoinGecko API response[39m {"service":"pbcex-api","version":"1.0.0","status":200,"correlationId":"4178pfj7x","duration":138}
[backend] 10:35:19 [32minfo[39m: [32mCoinGecko API connectivity verified[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mPricesService initialized successfully[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m✅ PricesService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing CheckoutService[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mCheckoutService depends on PricesService for base price data[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mCheckoutService initialized successfully[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m✅ CheckoutService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing PriceFeedService[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mInitializing mock price data[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mMock prices initialized[39m {"service":"pbcex-api","version":"1.0.0","count":8}
[backend] 10:35:19 [33mwarn[39m: [33mTradingView not configured, using mock prices[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mStarting price update loop[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mPriceFeedService initialized successfully[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m✅ PriceFeedService initialized[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m🎉 All services initialized successfully[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32m🚀 PBCEx API Server started[39m {"service":"pbcex-api","version":"1.0.0","port":4001,"environment":"development","nodeVersion":"v24.6.0","pid":95920,"corsOrigins":["http://localhost:3000","http://localhost:3001","http://localhost:3002","http://localhost:3003","http://localhost:3004","http://localhost:3005","http://127.0.0.1:3000"]}
[backend] 10:35:19 [32minfo[39m: [32m📊 Integration Status:[39m {"service":"pbcex-api","version":"1.0.0","database":true,"redis":true,"plaid":false,"stripe":false,"sendgrid":false,"twilio":false,"intercom":false,"tradingView":false,"datadog":false}
[backend] 10:35:19 [32minfo[39m: [32m💡 7 integrations need configuration for full functionality[39m {"service":"pbcex-api","version":"1.0.0"}
[backend] 10:35:19 [32minfo[39m: [32mServer is listening[39m {"service":"pbcex-api","version":"1.0.0","address":{"address":"::","family":"IPv6","port":4001}}
[backend] 10:35:45 [31merror[39m: [31mDatabase query failed: SELECT 1...[39m {"service":"pbcex-api","version":"1.0.0","error":{"message":"The server does not support SSL connections","stack":"Error: The server does not support SSL connections\n    at /Users/ebraheimsalem/Documents/GitHub/abes-pbcex-workspace/backend/node_modules/pg-pool/index.js:45:11\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at DatabaseManager.query (/Users/ebraheimsalem/Documents/GitHub/abes-pbcex-workspace/backend/src/db/index.ts:64:22)\n    at DatabaseManager.healthCheck (/Users/ebraheimsalem/Documents/GitHub/abes-pbcex-workspace/backend/src/db/index.ts:128:7)\n    at async Promise.all (index 0)\n    at /Users/ebraheimsalem/Documents/GitHub/abes-pbcex-workspace/backend/src/server.ts:191:35","name":"Error"}}
[backend] 10:35:45 [32minfo[39m: [32mHTTP 301 HEAD /[39m {"service":"pbcex-api","version":"1.0.0","requestId":"g013odl8t","method":"HEAD","url":"/","statusCode":301,"duration":0,"userAgent":"curl/8.7.1","ip":"::1","contentLength":158}
[frontend]  ○ Compiling / ...
[frontend]  ⨯ ./src/hooks/useSupabaseAuth.ts:3:1
[frontend] Module not found: Can't resolve '@/utils/supabase/client'
[frontend] [0m [90m 1 |[39m [36mimport[39m { useEffect[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m[0m
[frontend] [0m [90m 2 |[39m [36mimport[39m { [33mUser[39m [36mas[39m [33mSupabaseUser[39m } [36mfrom[39m [32m'@supabase/supabase-js'[39m[33m;[39m[0m
[frontend] [0m[31m[1m>[22m[39m[90m 3 |[39m [36mimport[39m { createClient } [36mfrom[39m [32m'@/utils/supabase/client'[39m[33m;[39m[0m
[frontend] [0m [90m   |[39m [31m[1m^[22m[39m[0m
[frontend] [0m [90m 4 |[39m [36mimport[39m { [33mUser[39m } [36mfrom[39m [32m'@/utils/api'[39m[33m;[39m[0m
[frontend] [0m [90m 5 |[39m[0m
[frontend] [0m [90m 6 |[39m [90m/**[39m[0m
[frontend] 
[frontend] https://nextjs.org/docs/messages/module-not-found
[frontend] 
[frontend] Import trace for requested module:
[frontend] ./hooks/useAuth.tsx
[frontend] ./pages/_app.tsx
[frontend]  ⨯ ./src/hooks/useSupabaseAuth.ts:3:1
[frontend] Module not found: Can't resolve '@/utils/supabase/client'
[frontend] [0m [90m 1 |[39m [36mimport[39m { useEffect[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m[0m
[frontend] [0m [90m 2 |[39m [36mimport[39m { [33mUser[39m [36mas[39m [33mSupabaseUser[39m } [36mfrom[39m [32m'@supabase/supabase-js'[39m[33m;[39m[0m
[frontend] [0m[31m[1m>[22m[39m[90m 3 |[39m [36mimport[39m { createClient } [36mfrom[39m [32m'@/utils/supabase/client'[39m[33m;[39m[0m
[frontend] [0m [90m   |[39m [31m[1m^[22m[39m[0m
[frontend] [0m [90m 4 |[39m [36mimport[39m { [33mUser[39m } [36mfrom[39m [32m'@/utils/api'[39m[33m;[39m[0m
[frontend] [0m [90m 5 |[39m[0m
[frontend] [0m [90m 6 |[39m [90m/**[39m[0m
[frontend] 
[frontend] https://nextjs.org/docs/messages/module-not-found
[frontend] 
[frontend] Import trace for requested module:
[frontend] ./hooks/useAuth.tsx
[frontend] ./pages/_app.tsx
[frontend]  ⨯ ./src/hooks/useSupabaseAuth.ts:3:1
[frontend] Module not found: Can't resolve '@/utils/supabase/client'
[frontend] [0m [90m 1 |[39m [36mimport[39m { useEffect[33m,[39m useState } [36mfrom[39m [32m'react'[39m[33m;[39m[0m
[frontend] [0m [90m 2 |[39m [36mimport[39m { [33mUser[39m [36mas[39m [33mSupabaseUser[39m } [36mfrom[39m [32m'@supabase/supabase-js'[39m[33m;[39m[0m
[frontend] [0m[31m[1m>[22m[39m[90m 3 |[39m [36mimport[39m { createClient } [36mfrom[39m [32m'@/utils/supabase/client'[39m[33m;[39m[0m
[frontend] [0m [90m   |[39m [31m[1m^[22m[39m[0m
[frontend] [0m [90m 4 |[39m [36mimport[39m { [33mUser[39m } [36mfrom[39m [32m'@/utils/api'[39m[33m;[39m[0m
[frontend] [0m [90m 5 |[39m[0m
[frontend] [0m [90m 6 |[39m [90m/**[39m[0m
[frontend] 
[frontend] https://nextjs.org/docs/messages/module-not-found
[frontend] 
[frontend] Import trace for requested module:
[frontend] ./hooks/useAuth.tsx
[frontend] ./pages/_app.tsx
[frontend]  HEAD / 500 in 1366ms
